service: leadai-automation

frameworkVersion: '^3.0.0'

provider:
  name: aws
  runtime: python3.9
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'prod'}
  
  # Environment variables
  environment:
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}
    SECRET_KEY: ${env:SECRET_KEY, 'leadai-secret-key-change-in-production'}
    CORS_ORIGINS: "*"
    
  # IAM permissions
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:BatchGetItem
            - dynamodb:BatchWriteItem
          Resource:
            - "arn:aws:dynamodb:${self:provider.region}:*:table/leadai-${self:provider.stage}-*"
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
          Resource:
            - "arn:aws:s3:::leadai-storage-${self:provider.stage}/*"

# Custom variables
custom:
  tableName: leadai-${self:provider.stage}
  bucketName: leadai-storage-${self:provider.stage}
  
  # Serverless plugins
  wsgi:
    app: src.main.app
    packRequirements: false
  
  pythonRequirements:
    dockerizePip: non-linux
    slim: true
    strip: false

# Functions
functions:
  app:
    handler: wsgi_handler.handler
    timeout: 30
    memorySize: 512
    events:
      - http:
          path: /
          method: ANY
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
      - http:
          path: /{proxy+}
          method: ANY
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

# Resources
resources:
  Resources:
    # DynamoDB Tables
    ClientsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: leadai-${self:provider.stage}-clients
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: username
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: username-index
            KeySchema:
              - AttributeName: username
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: email-index
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        SSESpecification:
          SSEEnabled: true
        Tags:
          - Key: Service
            Value: LeadAI
          - Key: Environment
            Value: ${self:provider.stage}

    LeadsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: leadai-${self:provider.stage}-leads
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: client_id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
          - AttributeName: created_at
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: client-index
            KeySchema:
              - AttributeName: client_id
                KeyType: HASH
              - AttributeName: created_at
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: email-index
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        SSESpecification:
          SSEEnabled: true
        Tags:
          - Key: Service
            Value: LeadAI
          - Key: Environment
            Value: ${self:provider.stage}

    CampaignsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: leadai-${self:provider.stage}-campaigns
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: client_id
            AttributeType: S
          - AttributeName: created_at
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: client-index
            KeySchema:
              - AttributeName: client_id
                KeyType: HASH
              - AttributeName: created_at
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        SSESpecification:
          SSEEnabled: true
        Tags:
          - Key: Service
            Value: LeadAI
          - Key: Environment
            Value: ${self:provider.stage}

    # S3 Bucket for file storage
    StorageBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: leadai-storage-${self:provider.stage}
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
        VersioningConfiguration:
          Status: Enabled
        LifecycleConfiguration:
          Rules:
            - Id: DeleteOldVersions
              Status: Enabled
              NoncurrentVersionExpirationInDays: 30
        Tags:
          - Key: Service
            Value: LeadAI
          - Key: Environment
            Value: ${self:provider.stage}

    # CloudWatch Log Groups
    AppLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: /aws/lambda/leadai-automation-${self:provider.stage}-app
        RetentionInDays: 14

# Plugins
plugins:
  - serverless-wsgi
  - serverless-python-requirements

# Package configuration
package:
  exclude:
    - node_modules/**
    - .git/**
    - .pytest_cache/**
    - __pycache__/**
    - "*.pyc"
    - .env
    - .env.*
    - tests/**
    - docs/**
    - README.md
    - .gitignore

